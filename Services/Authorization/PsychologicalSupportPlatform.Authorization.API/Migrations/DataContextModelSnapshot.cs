// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PsychologicalSupportPlatform.Authorization.Infrastructure.Data;

#nullable disable

namespace PsychologicalSupportPlatform.Authorization.API.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PsychologicalSupportPlatform.Authorization.Domain.Entities.Form", b =>
                {
                    b.Property<int>("Parallel")
                        .HasColumnType("int");

                    b.Property<string>("Letter")
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("Parallel", "Letter");

                    b.ToTable("Forms");
                });

            modelBuilder.Entity("PsychologicalSupportPlatform.Authorization.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Patronymic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("PsychologicalSupportPlatform.Authorization.Domain.Entities.Student", b =>
                {
                    b.HasBaseType("PsychologicalSupportPlatform.Authorization.Domain.Entities.User");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<int>("FormId")
                        .HasColumnType("int");

                    b.Property<string>("Letter")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("Parallel")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasIndex("Parallel", "Letter");

                    b.ToTable("Students", (string)null);
                });

            modelBuilder.Entity("PsychologicalSupportPlatform.Authorization.Domain.Entities.Student", b =>
                {
                    b.HasOne("PsychologicalSupportPlatform.Authorization.Domain.Entities.User", null)
                        .WithOne()
                        .HasForeignKey("PsychologicalSupportPlatform.Authorization.Domain.Entities.Student", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PsychologicalSupportPlatform.Authorization.Domain.Entities.Form", "Form")
                        .WithMany("Students")
                        .HasForeignKey("Parallel", "Letter")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Form");
                });

            modelBuilder.Entity("PsychologicalSupportPlatform.Authorization.Domain.Entities.Form", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
