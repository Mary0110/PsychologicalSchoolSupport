// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PsychologicalSupportPlatform.Edu.Infrastructure.Data;

#nullable disable

namespace PsychologicalSupportPlatform.Edu.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231221100928_delete_iscorrect")]
    partial class delete_iscorrect
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PsychologicalSupportPlatform.Edu.Domain.Entities.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AnswerText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("PsychologicalSupportPlatform.Edu.Domain.Entities.EduMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Theme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EduMaterials");
                });

            modelBuilder.Entity("PsychologicalSupportPlatform.Edu.Domain.Entities.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("TestId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TestId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("PsychologicalSupportPlatform.Edu.Domain.Entities.QuestionResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("SelectedAnswerId")
                        .HasColumnType("int");

                    b.Property<int>("UserTestResultId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SelectedAnswerId");

                    b.HasIndex("UserTestResultId");

                    b.ToTable("QuestionResults");
                });

            modelBuilder.Entity("PsychologicalSupportPlatform.Edu.Domain.Entities.StudentHasEduMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("EduMaterialId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EduMaterialId");

                    b.ToTable("StudentHasEduMaterials");
                });

            modelBuilder.Entity("PsychologicalSupportPlatform.Edu.Domain.Entities.Test", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tests");
                });

            modelBuilder.Entity("PsychologicalSupportPlatform.Edu.Domain.Entities.UserTestResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DatePassed")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TestId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TestId");

                    b.ToTable("UserTestResults");
                });

            modelBuilder.Entity("PsychologicalSupportPlatform.Edu.Domain.Entities.Answer", b =>
                {
                    b.HasOne("PsychologicalSupportPlatform.Edu.Domain.Entities.Question", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("PsychologicalSupportPlatform.Edu.Domain.Entities.Question", b =>
                {
                    b.HasOne("PsychologicalSupportPlatform.Edu.Domain.Entities.Test", "Test")
                        .WithMany("Questions")
                        .HasForeignKey("TestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Test");
                });

            modelBuilder.Entity("PsychologicalSupportPlatform.Edu.Domain.Entities.QuestionResult", b =>
                {
                    b.HasOne("PsychologicalSupportPlatform.Edu.Domain.Entities.Answer", "SelectedAnswer")
                        .WithMany()
                        .HasForeignKey("SelectedAnswerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PsychologicalSupportPlatform.Edu.Domain.Entities.UserTestResult", "UserTestResult")
                        .WithMany("QuestionResults")
                        .HasForeignKey("UserTestResultId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SelectedAnswer");

                    b.Navigation("UserTestResult");
                });

            modelBuilder.Entity("PsychologicalSupportPlatform.Edu.Domain.Entities.StudentHasEduMaterial", b =>
                {
                    b.HasOne("PsychologicalSupportPlatform.Edu.Domain.Entities.EduMaterial", "EduMaterial")
                        .WithMany("StudentHasEduMaterials")
                        .HasForeignKey("EduMaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EduMaterial");
                });

            modelBuilder.Entity("PsychologicalSupportPlatform.Edu.Domain.Entities.UserTestResult", b =>
                {
                    b.HasOne("PsychologicalSupportPlatform.Edu.Domain.Entities.Test", null)
                        .WithMany("StudentHasTest")
                        .HasForeignKey("TestId");
                });

            modelBuilder.Entity("PsychologicalSupportPlatform.Edu.Domain.Entities.EduMaterial", b =>
                {
                    b.Navigation("StudentHasEduMaterials");
                });

            modelBuilder.Entity("PsychologicalSupportPlatform.Edu.Domain.Entities.Question", b =>
                {
                    b.Navigation("Answers");
                });

            modelBuilder.Entity("PsychologicalSupportPlatform.Edu.Domain.Entities.Test", b =>
                {
                    b.Navigation("Questions");

                    b.Navigation("StudentHasTest");
                });

            modelBuilder.Entity("PsychologicalSupportPlatform.Edu.Domain.Entities.UserTestResult", b =>
                {
                    b.Navigation("QuestionResults");
                });
#pragma warning restore 612, 618
        }
    }
}
